/*
?????? "???????????"

???????? ????????? Observer ? ??????? update(data: any): void.

???????? ???? Subject, ???? ???? ???????? ??????? ??'?????, ??? ???????? ???? ?????.
??? ?????? subscribe(observer: Observer): void ?
unsubscribe(observer: Observer): void.
? ????? Subject ??????? ????? notify(data: any): void,
???? ???????? ????? update ??? ???? ?????????? ??'?????.

???????? ????, ???? ???????? ????????? Observer ? ??? ?????????? ????.
?????????, StockObserver ?? ??????? stockPrice.
????????? ??????, ?????????? ??'???? ?? ????? ? Subject ? ?????????????,
?? ???? ????????? ?????????.
*/
class Subject {
    constructor() {
        this._observers = [];
    }
    subscribe(observer) {
        this._observers.push(observer);
    }
    unsubscribe(observer) {
        const index = this._observers.indexOf(observer);
        this._observers.splice(index, 1);
    }
    notify(data) {
        this._observers.forEach(x => x.update(this));
    }
}
class StockObserver {
    update(data) {
        this._stockPrice++;
        console.log(`${this._name} now has stock price ${this._stockPrice}`);
    }
    constructor(_name) {
        this._name = _name;
        this._stockPrice = 0;
    }
}
const observer1 = new StockObserver('observer 1');
const observer2 = new StockObserver('observer 2');
const observer3 = new StockObserver('observer 3');
const subject = new Subject();
subject.subscribe(observer1);
subject.subscribe(observer2);
subject.notify(null);
subject.subscribe(observer3);
subject.unsubscribe(observer1);
subject.notify(null);
//# sourceMappingURL=watcher.js.map